/*
 * MC-1N2 ASoC codec driver
 *
 * Copyright (c) 2010 Yamaha Corporation
 *
 * This software is provided 'as-is', without any express or implied
 * warranty.  In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 */

#ifndef MC1N2_CFG_H
#define MC1N2_CFG_H
//#define MIC_VOL_ON // yosef added
#undef MIC_VOL_ON // yosef added

#include "mcdriver.h"

/*
 * ALSA Version
 */
/* #define ALSA_VER_1_0_19 */
/* #define ALSA_VER_1_0_21 */
#define ALSA_VER_1_0_23

#define DIO0_DAI_ENABLE
/* #define DIO1_DAI_ENABLE */
/* #define DIO2_DAI_ENABLE */

static const MCDRV_DIO_INFO stDioInfo_Default = {
	{
		/* DIO port 0 */
		{
			/* sDioCommon */
			{
				/* bMasterSlave : Master / Slave Setting */
				/*     MCDRV_DIO_SLAVE (0)  : Slave      */
				/*     MCDRV_DIO_MASTER(1)  : Master     */
				MCDRV_DIO_MASTER,
				/* bAutoFs : Sampling frequency automatic measurement ON/OFF Setting in slave mode */
				/*     MCDRV_AUTOFS_OFF(0)  : OFF */
				/*     MCDRV_AUTOFS_ON (1)  : ON  */
				MCDRV_AUTOFS_ON ,
				/* bFs : Sampling Rate Setting        */
				/*     MCDRV_FS_48000(0)  : 48kHz     */
				/*     MCDRV_FS_44100(1)  : 44.1kHz   */
				/*     MCDRV_FS_32000(2)  : 32kHz     */
				/*     MCDRV_FS_24000(4)  : 24kHz     */
				/*     MCDRV_FS_22050(5)  : 22.05kHz  */
				/*     MCDRV_FS_16000(6)  : 16kHz     */
				/*     MCDRV_FS_12000(8)  : 12kHz     */
				/*     MCDRV_FS_11025(9)  : 11.025kHz */
				/*     MCDRV_FS_8000 (10) : 8kHz      */
				MCDRV_FS_44100,
				/* bBckFs : Bit Clock Frequency Setting */
				/*     MCDRV_BCKFS_64 (0)  : LRCK x  64 */
				/*     MCDRV_BCKFS_48 (1)  : LRCK x  48 */
				/*     MCDRV_BCKFS_32 (2)  : LRCK x  32 */
				/*     MCDRV_BCKFS_512(4)  : LRCK x 512 */
				/*     MCDRV_BCKFS_256(5)  : LRCK x 256 */
				/*     MCDRV_BCKFS_128(6)  : LRCK x 128 */
				/*     MCDRV_BCKFS_16 (7)  : LRCK x  16 */
				MCDRV_BCKFS_32,
				/* bInterface : Interface Selection      */
				/*     MCDRV_DIO_DA (0)  : Digital Audio */
				/*     MCDRV_DIO_PCM(1)  : PCM           */
				MCDRV_DIO_DA,
				/* bBckInvert : Bit Clock Inversion Setting     */
				/*     MCDRV_BCLK_NORMAL(0)  : Normal Operation */
				/*     MCDRV_BCLK_INVERT(1)  : Clock Inverted   */
				MCDRV_BCLK_NORMAL,
				/* bPcmHizTim : High Impedance transition timing after transmitting the last PCM I/F data */
				/*     MCDRV_PCMHIZTIM_FALLING(0)  : BCLK#* Falling Edge */
				/*     MCDRV_PCMHIZTIM_RISING (1)  : BCLK#* Rising Edge  */
				MCDRV_PCMHIZTIM_FALLING,
				/* bPcmClkDown : Bit Clock Setting with PCM selected and Master selected                */
				/*     MCDRV_PCM_CLKDOWN_OFF (0)  : A bit clock value specified with bBckFs             */
				/*     MCDRV_PCM_CLKDOWN_HALF(1)  : A half of the bit clock value specified with bBckFs */
				MCDRV_PCM_CLKDOWN_OFF,
				/* bPcmFrame : Frame Mode Setting with PCM interface */
				/*     MCDRV_PCM_SHORTFRAME(0)  : Short Frame        */
				/*     MCDRV_PCM_LONGFRAME (1)  : Long Frame         */
				MCDRV_PCM_SHORTFRAME,
				/* bPcmHighPeriod : LR clock High time setting with PCM selected and Master selected */
				/*     0 to 31  : High level keeps during the period of time of         */
				/*                (setting value + 1) of the bit clock.                 */
				0,
			},
			/* sDir       */
			{
				/* wSrcRate : Sampling Rate Converter Setting */
				0,
				/* sDaFormat : Digital Audio Format Information */    
				{
					/* bBitSel : Bit Width Setting     */
					/*     MCDRV_BITSEL_16(0)  : 16bit */
					/*     MCDRV_BITSEL_20(1)  : 20bit */
					/*     MCDRV_BITSEL_24(2)  : 24bit */
					MCDRV_BITSEL_16,
					/* bMode : Data Format Setting                             */
					/*     MCDRV_DAMODE_HEADALIGN(0)  : Left-justified Format  */
					/*     MCDRV_DAMODE_I2S      (1)  : I2S                    */
					/*     MCDRV_DAMODE_TAILALIGN(2)  : Right-justified Format */
					MCDRV_DAMODE_I2S
				},
				/* sPcmFormat : PCM Format Information */
				{
					/* bMono : Mono / Stereo Setting  */
					/*     MCDRV_PCM_STEREO(0) Stereo */
					/*     MCDRV_PCM_MONO  (1) Mono   */
					MCDRV_PCM_MONO ,
					/* bOrder : Bit Order Setting                                     */
					/*     MCDRV_PCM_MSB_FIRST      (0)  : MSB First                  */
					/*     MCDRV_PCM_LSB_FIRST      (1)  : LSB First                  */
					/*     MCDRV_PCM_MSB_FIRST_SIGN (2)  : MSB First (Sign Extension) */
					/*     MCDRV_PCM_LSB_FIRST_SIGN (3)  : LSB First (Sign Extension) */
					/*     MCDRV_PCM_MSB_FIRST_ZERO (4)  : MSB First (Zeros Padding)  */
					/*     MCDRV_PCM_LSB_FIRST_ZERO (5)  : LSB First (Zeros Padding)  */
					MCDRV_PCM_MSB_FIRST,
					/* bLaw : Data Format Setting        */
					/*     MCDRV_PCM_LINEAR(0)  : Linear */
					/*     MCDRV_PCM_ALAW  (1)  : A-Law  */
					/*     MCDRV_PCM_MULAW (2)  : u-Law */
					MCDRV_PCM_LINEAR,
					/* bBitSel : Bit Width Setting        */
					/*     MCDRV_PCM_BITSEL_8 (0)  8 bits */
					/*     MCDRV_PCM_BITSEL_13(1) 13 bits */
					/*     MCDRV_PCM_BITSEL_14(2) 14 bits */
					/*     MCDRV_PCM_BITSEL_16(3) 16 bits */
					MCDRV_PCM_BITSEL_8
				},
				/* asSlot : Setting of a slot number of data to be fed to each channel */
				{0, 1}
			},
			/* sDit       */
			{
				/* wSrcRate : Sampling Rate Converter Setting */
				0,
				/* sDaFormat : Digital Audio Format Information */
				{
					/* bBitSel : Bit Width Setting     */
					/*     MCDRV_BITSEL_16(0)  : 16bit */
					/*     MCDRV_BITSEL_20(1)  : 20bit */
					/*     MCDRV_BITSEL_24(2)  : 24bit */
					MCDRV_BITSEL_16,
					/* bMode : Data Format Setting                             */
					/*     MCDRV_DAMODE_HEADALIGN(0)  : Left-justified Format  */
					/*     MCDRV_DAMODE_I2S      (1)  : I2S                    */
					/*     MCDRV_DAMODE_TAILALIGN(2)  : Right-justified Format */
					MCDRV_DAMODE_I2S
				},
				/* sPcmFormat : PCM Format Information */
				{
					/* bMono : Mono / Stereo Setting  */
					/*     MCDRV_PCM_STEREO(0) Stereo */
					/*     MCDRV_PCM_MONO  (1) Mono   */
					MCDRV_PCM_MONO ,
					/* bOrder : Bit Order Setting                                     */
					/*     MCDRV_PCM_MSB_FIRST      (0)  : MSB First                  */
					/*     MCDRV_PCM_LSB_FIRST      (1)  : LSB First                  */
					/*     MCDRV_PCM_MSB_FIRST_SIGN (2)  : MSB First (Sign Extension) */
					/*     MCDRV_PCM_LSB_FIRST_SIGN (3)  : LSB First (Sign Extension) */
					/*     MCDRV_PCM_MSB_FIRST_ZERO (4)  : MSB First (Zeros Padding)  */
					/*     MCDRV_PCM_LSB_FIRST_ZERO (5)  : LSB First (Zeros Padding)  */
					MCDRV_PCM_MSB_FIRST,
					/* bLaw : Data Format Setting        */
					/*     MCDRV_PCM_LINEAR(0)  : Linear */
					/*     MCDRV_PCM_ALAW  (1)  : A-Law  */
					/*     MCDRV_PCM_MULAW (2)  : u-Law */
					MCDRV_PCM_LINEAR,
					/* bBitSel : Bit Width Setting        */
					/*     MCDRV_PCM_BITSEL_8 (0)  8 bits */
					/*     MCDRV_PCM_BITSEL_13(1) 13 bits */
					/*     MCDRV_PCM_BITSEL_14(2) 14 bits */
					/*     MCDRV_PCM_BITSEL_16(3) 16 bits */
					MCDRV_PCM_BITSEL_8
				},
				/* asSlot Setting of a slot number of data to be transmitted from each channel */
				{0, 1}
			}
		},
		/* DIO port 1 */
		{
			/* sDioCommon */
			{
				/* bMasterSlave : Master / Slave Setting */
				/*     MCDRV_DIO_SLAVE (0)  : Slave      */
				/*     MCDRV_DIO_MASTER(1)  : Master     */
				MCDRV_DIO_SLAVE,
				/* bAutoFs : Sampling frequency automatic measurement ON/OFF Setting in slave mode */
				/*     MCDRV_AUTOFS_OFF(0)  : OFF */
				/*     MCDRV_AUTOFS_ON (1)  : ON  */
				MCDRV_AUTOFS_ON ,
				/* bFs : Sampling Rate Setting        */
				/*     MCDRV_FS_48000(0)  : 48kHz     */
				/*     MCDRV_FS_44100(1)  : 44.1kHz   */
				/*     MCDRV_FS_32000(2)  : 32kHz     */
				/*     MCDRV_FS_24000(4)  : 24kHz     */
				/*     MCDRV_FS_22050(5)  : 22.05kHz  */
				/*     MCDRV_FS_16000(6)  : 16kHz     */
				/*     MCDRV_FS_12000(8)  : 12kHz     */
				/*     MCDRV_FS_11025(9)  : 11.025kHz */
				/*     MCDRV_FS_8000 (10) : 8kHz      */
				MCDRV_FS_8000,
				/* bBckFs : Bit Clock Frequency Setting */
				/*     MCDRV_BCKFS_64 (0)  : LRCK x  64 */
				/*     MCDRV_BCKFS_48 (1)  : LRCK x  48 */
				/*     MCDRV_BCKFS_32 (2)  : LRCK x  32 */
				/*     MCDRV_BCKFS_512(4)  : LRCK x 512 */
				/*     MCDRV_BCKFS_256(5)  : LRCK x 256 */
				/*     MCDRV_BCKFS_128(6)  : LRCK x 128 */
				/*     MCDRV_BCKFS_16 (7)  : LRCK x  16 */
				MCDRV_BCKFS_32,
				/* bInterface : Interface Selection      */
				/*     MCDRV_DIO_DA (0)  : Digital Audio */
				/*     MCDRV_DIO_PCM(1)  : PCM           */
				MCDRV_DIO_PCM,
				/* bBckInvert : Bit Clock Inversion Setting     */
				/*     MCDRV_BCLK_NORMAL(0)  : Normal Operation */
				/*     MCDRV_BCLK_INVERT(1)  : Clock Inverted   */
				MCDRV_BCLK_NORMAL,
				/* bPcmHizTim : High Impedance transition timing after transmitting the last PCM I/F data */
				/*     MCDRV_PCMHIZTIM_FALLING(0)  : BCLK#* Falling Edge */
				/*     MCDRV_PCMHIZTIM_RISING (1)  : BCLK#* Rising Edge  */
				MCDRV_PCMHIZTIM_FALLING,
				/* bPcmClkDown : Bit Clock Setting with PCM selected and Master selected                */
				/*     MCDRV_PCM_CLKDOWN_OFF (0)  : A bit clock value specified with bBckFs             */
				/*     MCDRV_PCM_CLKDOWN_HALF(1)  : A half of the bit clock value specified with bBckFs */
				MCDRV_PCM_CLKDOWN_OFF,
				/* bPcmFrame : Frame Mode Setting with PCM interface */
				/*     MCDRV_PCM_SHORTFRAME(0)  : Short Frame        */
				/*     MCDRV_PCM_LONGFRAME (1)  : Long Frame         */
				MCDRV_PCM_SHORTFRAME,
				/* bPcmHighPeriod : LR clock High time setting with PCM selected and Master selected */
				/*     0 to 31  : High level keeps during the period of time of         */
				/*                (setting value + 1) of the bit clock.                 */
				0,
			},
			/* sDir       */
			{
				/* wSrcRate : Sampling Rate Converter Setting */
				0,
				/* sDaFormat : Digital Audio Format Information */    
				{
					/* bBitSel : Bit Width Setting     */
					/*     MCDRV_BITSEL_16(0)  : 16bit */
					/*     MCDRV_BITSEL_20(1)  : 20bit */
					/*     MCDRV_BITSEL_24(2)  : 24bit */
					MCDRV_BITSEL_16,
					/* bMode : Data Format Setting                             */
					/*     MCDRV_DAMODE_HEADALIGN(0)  : Left-justified Format  */
					/*     MCDRV_DAMODE_I2S      (1)  : I2S                    */
					/*     MCDRV_DAMODE_TAILALIGN(2)  : Right-justified Format */
					MCDRV_DAMODE_HEADALIGN
				},
				/* sPcmFormat : PCM Format Information */
				{
					/* bMono : Mono / Stereo Setting  */
					/*     MCDRV_PCM_STEREO(0) Stereo */
					/*     MCDRV_PCM_MONO  (1) Mono   */
					MCDRV_PCM_STEREO ,
					/* bOrder : Bit Order Setting                                     */
					/*     MCDRV_PCM_MSB_FIRST      (0)  : MSB First                  */
					/*     MCDRV_PCM_LSB_FIRST      (1)  : LSB First                  */
					/*     MCDRV_PCM_MSB_FIRST_SIGN (2)  : MSB First (Sign Extension) */
					/*     MCDRV_PCM_LSB_FIRST_SIGN (3)  : LSB First (Sign Extension) */
					/*     MCDRV_PCM_MSB_FIRST_ZERO (4)  : MSB First (Zeros Padding)  */
					/*     MCDRV_PCM_LSB_FIRST_ZERO (5)  : LSB First (Zeros Padding)  */
					MCDRV_PCM_MSB_FIRST,
//					MCDRV_PCM_LSB_FIRST,
					/* bLaw : Data Format Setting        */
					/*     MCDRV_PCM_LINEAR(0)  : Linear */
					/*     MCDRV_PCM_ALAW  (1)  : A-Law  */
					/*     MCDRV_PCM_MULAW (2)  : u-Law */
					MCDRV_PCM_LINEAR,
					/* bBitSel : Bit Width Setting        */
					/*     MCDRV_PCM_BITSEL_8 (0)  8 bits */
					/*     MCDRV_PCM_BITSEL_13(1) 13 bits */
					/*     MCDRV_PCM_BITSEL_14(2) 14 bits */
					/*     MCDRV_PCM_BITSEL_16(3) 16 bits */
					MCDRV_PCM_BITSEL_16
				},
				/* asSlot : Setting of a slot number of data to be fed to each channel */
				{0, 0}
			},
			/* sDit       */
			{
				/* wSrcRate : Sampling Rate Converter Setting */
				0,
				/* sDaFormat : Digital Audio Format Information */
				{
					/* bBitSel : Bit Width Setting     */
					/*     MCDRV_BITSEL_16(0)  : 16bit */
					/*     MCDRV_BITSEL_20(1)  : 20bit */
					/*     MCDRV_BITSEL_24(2)  : 24bit */
					MCDRV_BITSEL_16,
					/* bMode : Data Format Setting                             */
					/*     MCDRV_DAMODE_HEADALIGN(0)  : Left-justified Format  */
					/*     MCDRV_DAMODE_I2S      (1)  : I2S                    */
					/*     MCDRV_DAMODE_TAILALIGN(2)  : Right-justified Format */
					MCDRV_DAMODE_HEADALIGN
				},
				/* sPcmFormat : PCM Format Information */
				{
					/* bMono : Mono / Stereo Setting  */
					/*     MCDRV_PCM_STEREO(0) Stereo */
					/*     MCDRV_PCM_MONO  (1) Mono   */
					MCDRV_PCM_MONO ,
					/* bOrder : Bit Order Setting                                     */
					/*     MCDRV_PCM_MSB_FIRST      (0)  : MSB First                  */
					/*     MCDRV_PCM_LSB_FIRST      (1)  : LSB First                  */
					/*     MCDRV_PCM_MSB_FIRST_SIGN (2)  : MSB First (Sign Extension) */
					/*     MCDRV_PCM_LSB_FIRST_SIGN (3)  : LSB First (Sign Extension) */
					/*     MCDRV_PCM_MSB_FIRST_ZERO (4)  : MSB First (Zeros Padding)  */
					/*     MCDRV_PCM_LSB_FIRST_ZERO (5)  : LSB First (Zeros Padding)  */
					MCDRV_PCM_MSB_FIRST,
//					MCDRV_PCM_LSB_FIRST,
					/* bLaw : Data Format Setting        */
					/*     MCDRV_PCM_LINEAR(0)  : Linear */
					/*     MCDRV_PCM_ALAW  (1)  : A-Law  */
					/*     MCDRV_PCM_MULAW (2)  : u-Law */
					MCDRV_PCM_LINEAR,
					/* bBitSel : Bit Width Setting        */
					/*     MCDRV_PCM_BITSEL_8 (0)  8 bits */
					/*     MCDRV_PCM_BITSEL_13(1) 13 bits */
					/*     MCDRV_PCM_BITSEL_14(2) 14 bits */
					/*     MCDRV_PCM_BITSEL_16(3) 16 bits */
					MCDRV_PCM_BITSEL_16
				},
				/* asSlot Setting of a slot number of data to be transmitted from each channel */
				{0, 1}
			}
		},
		/* DIO port 2 */
		{
			/* sDioCommon */
			{
				/* bMasterSlave : Master / Slave Setting */
				/*     MCDRV_DIO_SLAVE (0)  : Slave      */
				/*     MCDRV_DIO_MASTER(1)  : Master     */
				MCDRV_DIO_MASTER,
				/* bAutoFs : Sampling frequency automatic measurement ON/OFF Setting in slave mode */
				/*     MCDRV_AUTOFS_OFF(0)  : OFF */
				/*     MCDRV_AUTOFS_ON (1)  : ON  */
				MCDRV_AUTOFS_ON ,
				/* bFs : Sampling Rate Setting        */
				/*     MCDRV_FS_48000(0)  : 48kHz     */
				/*     MCDRV_FS_44100(1)  : 44.1kHz   */
				/*     MCDRV_FS_32000(2)  : 32kHz     */
				/*     MCDRV_FS_24000(4)  : 24kHz     */
				/*     MCDRV_FS_22050(5)  : 22.05kHz  */
				/*     MCDRV_FS_16000(6)  : 16kHz     */
				/*     MCDRV_FS_12000(8)  : 12kHz     */
				/*     MCDRV_FS_11025(9)  : 11.025kHz */
				/*     MCDRV_FS_8000 (10) : 8kHz      */
				MCDRV_FS_8000,
				/* bBckFs : Bit Clock Frequency Setting */
				/*     MCDRV_BCKFS_64 (0)  : LRCK x  64 */
				/*     MCDRV_BCKFS_48 (1)  : LRCK x  48 */
				/*     MCDRV_BCKFS_32 (2)  : LRCK x  32 */
				/*     MCDRV_BCKFS_512(4)  : LRCK x 512 */
				/*     MCDRV_BCKFS_256(5)  : LRCK x 256 */
				/*     MCDRV_BCKFS_128(6)  : LRCK x 128 */
				/*     MCDRV_BCKFS_16 (7)  : LRCK x  16 */
				MCDRV_BCKFS_32,
				/* bInterface : Interface Selection      */
				/*     MCDRV_DIO_DA (0)  : Digital Audio */
				/*     MCDRV_DIO_PCM(1)  : PCM           */
				MCDRV_DIO_PCM,
				/* bBckInvert : Bit Clock Inversion Setting     */
				/*     MCDRV_BCLK_NORMAL(0)  : Normal Operation */
				/*     MCDRV_BCLK_INVERT(1)  : Clock Inverted   */
				MCDRV_BCLK_NORMAL,
				/* bPcmHizTim : High Impedance transition timing after transmitting the last PCM I/F data */
				/*     MCDRV_PCMHIZTIM_FALLING(0)  : BCLK#* Falling Edge */
				/*     MCDRV_PCMHIZTIM_RISING (1)  : BCLK#* Rising Edge  */
				MCDRV_PCMHIZTIM_FALLING,
				/* bPcmClkDown : Bit Clock Setting with PCM selected and Master selected                */
				/*     MCDRV_PCM_CLKDOWN_OFF (0)  : A bit clock value specified with bBckFs             */
				/*     MCDRV_PCM_CLKDOWN_HALF(1)  : A half of the bit clock value specified with bBckFs */
				MCDRV_PCM_CLKDOWN_OFF,
				/* bPcmFrame : Frame Mode Setting with PCM interface */
				/*     MCDRV_PCM_SHORTFRAME(0)  : Short Frame        */
				/*     MCDRV_PCM_LONGFRAME (1)  : Long Frame         */
				MCDRV_PCM_SHORTFRAME,
				/* bPcmHighPeriod : LR clock High time setting with PCM selected and Master selected */
				/*     0 to 31  : High level keeps during the period of time of         */
				/*                (setting value + 1) of the bit clock.                 */
				0,
			},
			/* sDir       */
			{
				/* wSrcRate : Sampling Rate Converter Setting */
				0,
				/* sDaFormat : Digital Audio Format Information */    
				{
					/* bBitSel : Bit Width Setting     */
					/*     MCDRV_BITSEL_16(0)  : 16bit */
					/*     MCDRV_BITSEL_20(1)  : 20bit */
					/*     MCDRV_BITSEL_24(2)  : 24bit */
					MCDRV_BITSEL_16,
					/* bMode : Data Format Setting                             */
					/*     MCDRV_DAMODE_HEADALIGN(0)  : Left-justified Format  */
					/*     MCDRV_DAMODE_I2S      (1)  : I2S                    */
					/*     MCDRV_DAMODE_TAILALIGN(2)  : Right-justified Format */
					MCDRV_DAMODE_HEADALIGN
				},
				/* sPcmFormat : PCM Format Information */
				{
					/* bMono : Mono / Stereo Setting  */
					/*     MCDRV_PCM_STEREO(0) Stereo */
					/*     MCDRV_PCM_MONO  (1) Mono   */
					MCDRV_PCM_STEREO ,
					/* bOrder : Bit Order Setting                                     */
					/*     MCDRV_PCM_MSB_FIRST      (0)  : MSB First                  */
					/*     MCDRV_PCM_LSB_FIRST      (1)  : LSB First                  */
					/*     MCDRV_PCM_MSB_FIRST_SIGN (2)  : MSB First (Sign Extension) */
					/*     MCDRV_PCM_LSB_FIRST_SIGN (3)  : LSB First (Sign Extension) */
					/*     MCDRV_PCM_MSB_FIRST_ZERO (4)  : MSB First (Zeros Padding)  */
					/*     MCDRV_PCM_LSB_FIRST_ZERO (5)  : LSB First (Zeros Padding)  */
					MCDRV_PCM_MSB_FIRST,
//					MCDRV_PCM_LSB_FIRST,
					/* bLaw : Data Format Setting        */
					/*     MCDRV_PCM_LINEAR(0)  : Linear */
					/*     MCDRV_PCM_ALAW  (1)  : A-Law  */
					/*     MCDRV_PCM_MULAW (2)  : u-Law */
					MCDRV_PCM_LINEAR,
					/* bBitSel : Bit Width Setting        */
					/*     MCDRV_PCM_BITSEL_8 (0)  8 bits */
					/*     MCDRV_PCM_BITSEL_13(1) 13 bits */
					/*     MCDRV_PCM_BITSEL_14(2) 14 bits */
					/*     MCDRV_PCM_BITSEL_16(3) 16 bits */
					MCDRV_PCM_BITSEL_16
				},
				/* asSlot : Setting of a slot number of data to be fed to each channel */
				{0, 0}
			},
			/* sDit       */
			{
				/* wSrcRate : Sampling Rate Converter Setting */
				0,
				/* sDaFormat : Digital Audio Format Information */
				{
					/* bBitSel : Bit Width Setting     */
					/*     MCDRV_BITSEL_16(0)  : 16bit */
					/*     MCDRV_BITSEL_20(1)  : 20bit */
					/*     MCDRV_BITSEL_24(2)  : 24bit */
					MCDRV_BITSEL_16,
					/* bMode : Data Format Setting                             */
					/*     MCDRV_DAMODE_HEADALIGN(0)  : Left-justified Format  */
					/*     MCDRV_DAMODE_I2S      (1)  : I2S                    */
					/*     MCDRV_DAMODE_TAILALIGN(2)  : Right-justified Format */
					MCDRV_DAMODE_HEADALIGN
				},
				/* sPcmFormat : PCM Format Information */
				{
					/* bMono : Mono / Stereo Setting  */
					/*     MCDRV_PCM_STEREO(0) Stereo */
					/*     MCDRV_PCM_MONO  (1) Mono   */
					MCDRV_PCM_MONO ,
					/* bOrder : Bit Order Setting                                     */
					/*     MCDRV_PCM_MSB_FIRST      (0)  : MSB First                  */
					/*     MCDRV_PCM_LSB_FIRST      (1)  : LSB First                  */
					/*     MCDRV_PCM_MSB_FIRST_SIGN (2)  : MSB First (Sign Extension) */
					/*     MCDRV_PCM_LSB_FIRST_SIGN (3)  : LSB First (Sign Extension) */
					/*     MCDRV_PCM_MSB_FIRST_ZERO (4)  : MSB First (Zeros Padding)  */
					/*     MCDRV_PCM_LSB_FIRST_ZERO (5)  : LSB First (Zeros Padding)  */
					MCDRV_PCM_MSB_FIRST,
//					MCDRV_PCM_LSB_FIRST,
					/* bLaw : Data Format Setting        */
					/*     MCDRV_PCM_LINEAR(0)  : Linear */
					/*     MCDRV_PCM_ALAW  (1)  : A-Law  */
					/*     MCDRV_PCM_MULAW (2)  : u-Law */
					MCDRV_PCM_LINEAR,
					/* bBitSel : Bit Width Setting        */
					/*     MCDRV_PCM_BITSEL_8 (0)  8 bits */
					/*     MCDRV_PCM_BITSEL_13(1) 13 bits */
					/*     MCDRV_PCM_BITSEL_14(2) 14 bits */
					/*     MCDRV_PCM_BITSEL_16(3) 16 bits */
					MCDRV_PCM_BITSEL_16
				},
				/* asSlot Setting of a slot number of data to be transmitted from each channel */
				{0, 1}
			}
		}
	}
};

/* ========================================
   DAC settings
   ========================================*/
static const MCDRV_DAC_INFO stDacInfo_Default = {
	/* bMasterSwap : DAC Master Path SWAP Setting                          */
	/*     MCDRV_DSWAP_OFF      (0)  : No SWAP                             */
	/*     MCDRV_DSWAP_SWAP     (1)  : SWAP                                */
	/*     MCDRV_DSWAP_MUTE     (2)  : MUTE                                */
	/*     MCDRV_DSWAP_RMVCENTER(3)  : Center Removed                      */
	/*     MCDRV_DSWAP_MONO     (4)  : Mono                                */
	/*     MCDRV_DSWAP_MONOHALF (5)  : Reserved (do not use this setting)  */
	/*     MCDRV_DSWAP_BOTHL    (6)  : Lch data output in both Lch and Rch */
	/*     MCDRV_DSWAP_BOTHR    (7)  : Rch data output in both Lch and Rch */
	MCDRV_DSWAP_OFF,
	/* bVoiceSwap : DAC Voice Path SWAP Setting                            */
	/*     MCDRV_DSWAP_OFF      (0)  : No SWAP                             */
	/*     MCDRV_DSWAP_SWAP     (1)  : SWAP                                */
	/*     MCDRV_DSWAP_MUTE     (2)  : MUTE                                */
	/*     MCDRV_DSWAP_RMVCENTER(3)  : Center Removed                      */
	/*     MCDRV_DSWAP_MONO     (4)  : Mono (-6dB)                         */
	/*     MCDRV_DSWAP_MONOHALF (5)  : Reserved (do not use this setting)  */
	/*     MCDRV_DSWAP_BOTHL    (6)  : Lch data output in both Lch and Rch */
	/*     MCDRV_DSWAP_BOTHR    (7)  : Rch data output in both Lch and Rch */
	MCDRV_DSWAP_OFF,
	/* bDcCut : HP, SP Protection DC-ct Filter Setting  */
	/*     MCDRV_DCCUT_ON (0)  : DC-cut Filter ON       */
	/*     MCDRV_DCCUT_OFF(1)  : DC-cut Filter OFF      */
	MCDRV_DCCUT_ON
};

/* ========================================
   ADC settings
   ========================================*/

static const MCDRV_ADC_INFO stAdcInfo_Default = {
	/* bAgcAdjust : AGC Gain Control Range     */
	/*     MCDRV_AGCADJ_24(0)  : -3dB to +24dB */
	/*     MCDRV_AGCADJ_18(1)  : -3dB to +18dB */
	/*     MCDRV_AGCADJ_12(2)  : -3dB to +12dB */
	/*     MCDRV_AGCADJ_0 (3)  : -3dB to  +0dB */
	MCDRV_AGCADJ_0,
	/* bAgcOn : AGC ON/OFF Setting */
	/*     MCDRV_AGC_OFF(0)  : OFF */
	/*     MCDRV_AGC_ON (1)  : ON  */
	MCDRV_AGC_OFF,
	/* bMonot : Mono / Stereo Setting    */
	/*     MCDRV_ADC_STEREO(0)  : Stereo */
	/*     MCDRV_ADC_MONO  (1)  : Mono   */
	MCDRV_ADC_STEREO
};

/* ========================================
   SP settings
   ========================================*/
static const MCDRV_SP_INFO stSpInfo_Default = {
	/* bSwap : Swap setting                */
	/*     MCDRV_SPSWAP_OFF (0)  : No SWAP */
	/*     MCDRV_SPSWAP_SWAP(1)  : SWAP    */
	MCDRV_SPSWAP_OFF
};

/* ========================================
   DNG settings
   ========================================*/
static const MCDRV_DNG_INFO stDngInfo_Default = {
	/* bOnOff[] : Digital Noise Gate On/Off Setting */
	/*     MCDRV_DNG_OFF(0)  : OFF                */
	/*     MCDRV_DNG_ON (1)  : ON                 */
	{MCDRV_DNG_ON, MCDRV_DNG_ON, MCDRV_DNG_ON},

	/* bThreshold[] : Threshold Setting    */
	/*     MCDRV_DNG_THRES_30    (0) */
	/*     MCDRV_DNG_THRES_36    (1) */
	/*     MCDRV_DNG_THRES_42    (2) */
	/*     MCDRV_DNG_THRES_48    (3) */
	/*     MCDRV_DNG_THRES_54    (4) */
	/*     MCDRV_DNG_THRES_60    (5) */
	/*     MCDRV_DNG_THRES_66    (6) */
	/*     MCDRV_DNG_THRES_72    (7) */
	/*     MCDRV_DNG_THRES_78    (8) */
	/*     MCDRV_DNG_THRES_84    (9) */
	{MCDRV_DNG_THRES_84, MCDRV_DNG_THRES_84, MCDRV_DNG_THRES_84},

	/* bHold[] : Hold Time Setting         */
	/*     MCDRV_DNG_HOLD_30 (0)  :  30ms */
	/*     MCDRV_DNG_HOLD_120(1)  : 120ms */
	/*     MCDRV_DNG_HOLD_500(2)  : 500ms */
	{MCDRV_DNG_HOLD_500, MCDRV_DNG_HOLD_500, MCDRV_DNG_HOLD_500},

	/* bAttack[] : Attack Time Setting        */
	/*     MCDRV_DNG_ATTACK_25   (0)  :   25ms */
	/*     MCDRV_DNG_ATTACK_100  (1)  :  100ms */
	/*     MCDRV_DNG_ATTACK_400  (2)  :  400ms */
	/*     MCDRV_DNG_ATTACK_800  (3)  :  800ms */
	{MCDRV_DNG_ATTACK_100, MCDRV_DNG_ATTACK_100, MCDRV_DNG_ATTACK_400},

	/* bRelease[] : Release Time Setting        */
	/*     MCDRV_DNG_RELEASE_7950(0)  : 7.95ms */
	/*     MCDRV_DNG_RELEASE_470 (1)  : 0.47ms */
	/*     MCDRV_DNG_RELEASE_940 (2)  : 0.94ms */
	{MCDRV_DNG_RELEASE_7950, MCDRV_DNG_RELEASE_7950, MCDRV_DNG_RELEASE_7950},

	/* bTarget[] : Target Volume Setting        */
	/*     MCDRV_DNG_TARGET_6    (0)  : -6dB  */
	/*     MCDRV_DNG_TARGET_9    (1)  : -9dB  */
	/*     MCDRV_DNG_TARGET_12   (2)  : -12dB */
	/*     MCDRV_DNG_TARGET_15   (3)  : -15dB */
	/*     MCDRV_DNG_TARGET_18   (4)  : -18dB */
	/*     MCDRV_DNG_TARGET_MUTE (5)  : Mute  */
	{MCDRV_DNG_TARGET_MUTE, MCDRV_DNG_TARGET_MUTE, MCDRV_DNG_TARGET_MUTE},
};
#if 0
static const MCDRV_DNG_INFO stDngInfo_Default = {
	/* bOnOff : Digital Noise Gate On/Off Setting */
	/*     MCDRV_DNG_OFF(0)  : OFF                */
	/*     MCDRV_DNG_ON (1)  : ON                 */
	MCDRV_DNG_OFF,

	/* bThreshold : Threshold Setting    */
	/*     MCDRV_DNG_THRES_5BIT  (0) */
	/*     MCDRV_DNG_THRES_7BIT  (1) */
	/*     MCDRV_DNG_THRES_9BIT  (2) */
	/*     MCDRV_DNG_THRES_11BIT (3) */
	/*     MCDRV_DNG_THRES_13BIT (4) */
	/*     MCDRV_DNG_THRES_15BIT (5) */
	/*     MCDRV_DNG_THRES_17BIT (6) */
	/*     MCDRV_DNG_THRES_21BIT (7) */
	MCDRV_DNG_THRES_11BIT,

	/* bHold : Hold Time Setting         */
	/*     MCDRV_DNG_HOLD_30 (0)  :  30ms */
	/*     MCDRV_DNG_HOLD_120(1)  : 120ms */
	/*     MCDRV_DNG_HOLD_500(2)  : 500ms */
	MCDRV_DNG_HOLD_500,

	/* bAttack : Attack Time Setting        */
	/*     MCDRV_DNG_ATTACK_25   (0)  :   25ms */
	/*     MCDRV_DNG_ATTACK_800  (1)  :  800ms */
	/*     MCDRV_DNG_ATTACK_1100 (2)  : 1100ms */
	MCDRV_DNG_ATTACK_1100,

	/* bRelease : Release Time Setting        */
	/*     MCDRV_DNG_RELEASE_7950(0)  : 7.95ms */
	/*     MCDRV_DNG_RELEASE_470 (1)  : 0.47ms */
	/*     MCDRV_DNG_RELEASE_940 (2)  : 0.94ms */
	MCDRV_DNG_RELEASE_940,

};
#endif

/* ========================================
   AudioEngine settings
   ========================================*/
static MCDRV_AE_INFO stAeInfo_Hp = {
	/* On/Off */
	0x00,
	/* BEX */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	},
	/* WIDE */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00
	},
	/* DRC */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	},
	/* EQ5 */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00
	},
	/* EQ3 */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00
	}
};

static MCDRV_AE_INFO stAeInfo_Spk = {
	/* On/Off */
	0x00,
	/* BEX */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	},
	/* WIDE */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00
	},
	/* DRC */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	},
	/* EQ5 */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00
	},
	/* EQ3 */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00
	}
};



static MCDRV_AE_INFO stAeInfo_Rcv = {
	/* On/Off */
	0x00,
	/* BEX */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	},
	/* WIDE */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00
	},
	/* DRC */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	},
	/* EQ5 */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00
	},
	/* EQ3 */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00
	}
};
static MCDRV_AE_INFO stAeInfo_skype = {
           /* On/Off cut off 500*/
            0x08,
            /* BEX : Don't Care */
            {
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
            },
            /* WIDE : Don't Care */
            {
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00
            },
            /* DRC : Don't Care */
            {
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
            },
            /* EQ5 : Don't Care */
            {
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00
            },
            /* EQ3 :  */
            {
                0x02,0x01,0x46,0x04,0x02,0x8C,0x02,0x01,
                0x46,0x0C,0x7A,0x96,0xFB,0x80,0x52,0x10,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x0F,0x46,0xBA,
                0x73,0x3F,0xE0,0xE1,0x72,0x8B,0x19,0x80,
                0x42,0x0F,0x46,0xBA,0x73,0x3F,0xE0,0x1E,
                0x85,0x13,0x12,0x61,0x34,0xF1,0x6A,0x29,
                0x45,0x61,0xB6
            }

};

static MCDRV_AE_INFO stAeInfo_qik = {
   /* On/Off */
		0x02,
		/* BEX : Don't Care */
		{
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
		},
		/* WIDE : Don't Care */
		{
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00
		},
		/* DRC :  */
		{
			0x40,0x00,0x7F,0xFF,0xC0,0x00,0x00,0x01,
			0x00,0x80,0x08,0x00,0x00,0x04,0x00,0x08,
			0x00,0x04,0x7D,0x09,0xC2,0xE5,0x24,0xB9,
			0x49,0x72,0x24,0xB9,0x62,0x7B,0x0A,0x9F,
			0x3F,0x87,0x80,0xF1,0x3F,0x87,0x7F,0x0D,
			0xC0,0xF0,0xEE,0x1E,0xE9,0x3A,0xE3,0x01,
			0xDB,0x13,0xD0,0xF6,0xC4,0x19,0xB3,0xC0,
			0x9E,0xDB,0x00,0x00,0xFE,0xF6,0x00,0x4E,
			0x00,0x37,0x02,0x80,0x01,0xB0,0x01,0x40,
			0x00,0xE0,0x3F,0xF8,0x00,0x07,0x59,0x3A,
			0x26,0xC5,0x00,0x10,0x00,0x10,0x7F,0xDE,
			0x10,0x00,0xC5,0x86,0xBF,0xCF,0xB9,0x90,
			0xB2,0xAB,0xAB,0x15,0xA2,0xCB,0x99,0xBB,
			0x8F,0xB2,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x7F,0xFF,0x00,0x00,0x00,0x00,
			0x10,0x00,0xCA,0x06,0xBF,0xD9,0xB9,0x8B,
			0xB2,0x9E,0xAB,0x03,0xA2,0xA9,0x99,0x7D,
			0x8F,0x69,0xFB,0x30,0xF9,0xBB,0xF7,0xEC,
			0xF4,0x98,0xEF,0xE3,0xE9,0x3D,0xDF,0xD9,
			0xD9,0xC9,0xD2,0x95,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
			0xFF,0xFE,0x00,0x01,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x7F,0xFF,0x00,0x00,
			0x00,0x00,0x08,0x14,0x02,0x07,0x00,0x82,
			0xFC,0x68,0xFA,0x18,0xEB,0x48,0x20,0x00,
			0x40,0x00,0x10,0x00,0x7F,0xFF,0x00,0x00,
			0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00
		},
		/* EQ5 : Don't Care */
		{
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00
		},
		/* EQ3 : Don't Care */
		{
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			0x00,0x00,0x00
		}

	};

static MCDRV_AE_INFO stAeInfo_Bt = {
  	/* On/Off */
	0x00,
	/* BEX */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	},
	/* WIDE */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00
	},
	/* DRC */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	},
	/* EQ5 */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00
	},
	/* EQ3 */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00
	}

};

static MCDRV_AE_INFO stAeInfo_Dock = {
	/* On/Off */
	0x00,
	/* BEX */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	},
	/* WIDE */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00
	},
	/* DRC */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	},
	/* EQ5 */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00
	},
	/* EQ3 */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00
	}
};

static MCDRV_AE_INFO stAeInfo_Dual = {
	/* On/Off */
	0x00,
	/* BEX */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	},
	/* WIDE */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00
	},
	/* DRC */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	},
	/* EQ5 */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00
	},
	/* EQ3 */
	{
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00
	}
};

/* ========================================
   System EQ settings
   ========================================*/
static MCDRV_SYSEQ_INFO stSyseqInfo_Default = {
	/* On/Off */
	0x00,
	/* EQ */
	{
		0x10,0xc4,0x50,0x12,0xc4,0x40,0x02,0xa9,
		0x60,0xed,0x3b,0xc0,0xfc,0x92,0x40,
	},
};

/* ========================================
   Volume settings
   ========================================*/
static MCDRV_VOL_INFO stVolInfo_Default = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
#ifdef MIC_VOL_ON
	{1},		/* aswA_Mic1 */
	{1},		/* aswA_Mic2 */
	{1},		/* aswA_Mic3 */
#else
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#endif
#if 1   // yosef added  temporary
	{1, 1},	/* aswA_Hp */
	{1, 1},	/* aswA_Sp */
	{1},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */

#endif

	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_RecognitionOn = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
#if 1
	{1},		/* aswA_Mic1 */
	{1},		/* aswA_Mic2 */
	{1},		/* aswA_Mic3 */
#else
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#endif

#if 1   // yosef added  temporary
	{-2561, -2561},	/* aswA_Hp */
	{-1281, -1281},	/* aswA_Sp */
	{1},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */

#endif

	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_RecognitionOff = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
#ifdef MIC_VOL_ON
	{1},		/* aswA_Mic1 */
	{1},		/* aswA_Mic2 */
	{1},		/* aswA_Mic3 */
#else
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#endif
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */
	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_VoipOn = {
	{2785, 2785},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
#if 1
	{1},		/* aswA_Mic1 */
	{1},		/* aswA_Mic2 */
	{1},		/* aswA_Mic3 */
#else
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#endif
#if 1   // yosef added  temporary
      /* adjust by park dongyun for voip tunning */
	{-4353, -4353},	/* aswA_Hp */
	{10251, -14593},	/* aswA_Sp */
	{1537},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */
#endif

	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_VoipOff = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster
	*/
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
      /* adjust by park dongyun for voip tunning */
	{-4353, -4353},	/* aswA_Hp */
	{1025, -14593},	/* aswA_Sp */
	{1537},		/* aswA_Rc */
        
	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_PlaybackRcv = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
#ifdef MIC_VOL_ON
	{1},		/* aswA_Mic1 */
	{1},		/* aswA_Mic2 */
	{1},		/* aswA_Mic3 */
#else
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#endif
#if 1   // yosef added  temporary
	{1, 1},	/* aswA_Hp */
	{1, 1},	/* aswA_Sp */
	{1537},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */

#endif

	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_PlaybackSpk = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
#ifdef MIC_VOL_ON
	{1},		/* aswA_Mic1 */
	{1},		/* aswA_Mic2 */
	{1},		/* aswA_Mic3 */
#else
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#endif
#if 1   // yosef added  temporary
	{1, 1},	/* aswA_Hp */
	{1, 1},	/* aswA_Sp */
	{1},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */

#endif

	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_PlaybackHp = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
#ifdef MIC_VOL_ON
	{1},		/* aswA_Mic1 */
	{1},		/* aswA_Mic2 */
	{1},		/* aswA_Mic3 */
#else
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#endif
#if 1   // yosef added  temporary
	{1, 1},	/* aswA_Hp */
	{1, 1},	/* aswA_Sp */
	{1},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */

#endif

	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_PlaybackDual = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
#ifdef MIC_VOL_ON
	{1},		/* aswA_Mic1 */
	{1},		/* aswA_Mic2 */
	{1},		/* aswA_Mic3 */
#else
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#endif
#if 1   // yosef added  temporary
	{1, 1},	/* aswA_Hp */
	{1, 1},	/* aswA_Sp */
	{1},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */

#endif

	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_PlaybackDock = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{0, 0},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#if 1   // yosef added  temporary
	{1, 1},	/* aswA_Hp */
	{1, 1},	/* aswA_Sp */
	{1},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */

#endif

	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_PlaybackRingSpk = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
#ifdef MIC_VOL_ON
	{1},		/* aswA_Mic1 */
	{1},		/* aswA_Mic2 */
	{1},		/* aswA_Mic3 */
#else
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#endif
#if 1   // yosef added  temporary
	{1, 1},	/* aswA_Hp */
	{1, 1},	/* aswA_Sp */
	{1},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */

#endif

	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_PlaybackRingHp = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
#ifdef MIC_VOL_ON
	{1},		/* aswA_Mic1 */
	{1},		/* aswA_Mic2 */
	{1},		/* aswA_Mic3 */
#else
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#endif
#if 1   // yosef added  temporary
	{1, 1},	/* aswA_Hp */
	{1, 1},	/* aswA_Sp */
	{1},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */

#endif

	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_PlaybackRingDual = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
#ifdef MIC_VOL_ON
	{1},		/* aswA_Mic1 */
	{1},		/* aswA_Mic2 */
	{1},		/* aswA_Mic3 */
#else
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#endif
#if 1   // yosef added  temporary
	{1, 1},	/* aswA_Hp */
	{1, 1},	/* aswA_Sp */
	{1},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */

#endif

	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_CallRcv = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */
	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_CallSpk = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */
	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_CallHp = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */
	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_CallBt = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */
	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_FmHp = {
	{1, 1},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#if 1   // yosef added  temporary
	{1, 1},	/* aswA_Hp */
	{1, 1},	/* aswA_Sp */
	{1},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */

#endif

	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_FmSpk = {
	{1, 1},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#if 1   // yosef added  temporary
	{1, 1},	/* aswA_Hp */
	{1, 1},	/* aswA_Sp */
	{1},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */

#endif
	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_FmMixHp = {
	{1, 1},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#if 1   // yosef added  temporary
	{1, 1},	/* aswA_Hp */
	{1, 1},	/* aswA_Sp */
	{1},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */

#endif

	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_FmMixSpk = {
	{1, 1},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#if 1   // yosef added  temporary
	{1, 1},	/* aswA_Hp */
	{1, 1},	/* aswA_Sp */
	{1},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */

#endif

	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

static MCDRV_VOL_INFO stVolInfo_FmMixDual = {
	{0, 0},	/* aswD_Ad0 */
	{0},		/* aswD_Ad1 */
	{1, 1},	/* aswD_Aeng6 */
	{0, 0},	/* aswD_Pdm */
	{0, 0},	/* aswD_Dtmfb */
	{1, 1},	/* aswD_Dir0 */
	{1, 1},	/* aswD_Dir1 */
	{1, 1},	/* aswD_Dir2 */
	{1, 1},	/* aswD_Ad0Att */
	{0},		/* aswD_Ad1Att */
	{1, 1},	/* aswD_Dir0Att */
	{1, 1},	/* aswD_Dir1Att */
	{1, 1},	/* aswD_Dir2Att */
	{0, 0},	/* aswD_SideTone */
	{0, 0},	/* aswD_DtmfAtt */
	{1, 1},	/* aswD_DacMaster */
	{0, 0},	/* aswD_DacVoice */
	{1, 1},	/* aswD_DacAtt */
	{1, 1},	/* aswD_Dit0 */
	{1, 1},	/* aswD_Dit1 */
	{1, 1},	/* aswD_Dit2 */
	{1, 1},	/* aswA_Ad0 */
	{0},		/* aswA_Ad1 */
	{0, 0},	/* aswA_Lin1 */
	{0, 0},	/* aswA_Lin2 */
#ifdef MIC_VOL_ON
	{1},		/* aswA_Mic1 */
	{1},		/* aswA_Mic2 */
	{1},		/* aswA_Mic3 */
#else
	{0},		/* aswA_Mic1 */
	{0},		/* aswA_Mic2 */
	{0},		/* aswA_Mic3 */
#endif
#if 1   // yosef added  temporary
	{1, 1},	/* aswA_Hp */
	{1, 1},	/* aswA_Sp */
	{1},		/* aswA_Rc */
#else
	{0, 0},	/* aswA_Hp */
	{0, 0},	/* aswA_Sp */
	{0},		/* aswA_Rc */

#endif

	{1, 1},	/* aswA_Lout1 */
	{0, 0},	/* aswA_Lout2 */
	{3841},	/* aswA_Mic1Gain */
	{3841},	/* aswA_Mic2Gain */
	{3841},	/* aswA_Mic3Gain */
	{1},		/* aswA_HpGain */
};

#endif
